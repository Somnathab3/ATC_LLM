[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-bluesky-cdr"
version = "1.0.0"
description = "LLM-driven conflict detection and resolution for BlueSky"
authors = [{name = "ATC LLM Team", email = "atc-llm@example.com"}]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]

[project.scripts]
atc-llm = "src.atc_llm_cli:console_main"

[tool.setuptools]
packages = ["src", "src.cdr"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

[project.urls]
"Homepage" = "https://github.com/your-username/llm-bluesky-cdr"
"Bug Reports" = "https://github.com/your-username/llm-bluesky-cdr/issues"
"Source" = "https://github.com/your-username/llm-bluesky-cdr"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q --maxfail=1 --disable-warnings --strict-markers --cov=src --cov-report=term-missing --cov-fail-under=13"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: integration or heavy tests",
    "integration: marks tests as integration tests",
    "smoke: marks tests as smoke tests", 
    "unit: marks tests as unit tests"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "bluesky.*",
    "matplotlib.*",
    "seaborn.*",
    "scipy.*",
]
ignore_missing_imports = true
